package gradlesparkscala
/*
 * This Scala source file was generated by the Gradle 'init' task.
 */
import scala.io.Source
import java.util.Properties
//import scala.collection.JavaConverters._
import scala.jdk.CollectionConverters._


object App {



  def main(args: Array[String]): Unit = {
    println(greeting())
    testConf()

    // val properties = readConfigFile("/query_sample/sample.conf")
    //     properties.stringPropertyNames().asScala.foreach { key =>
    //    val value: String = properties.getProperty(key)
    //     // Do something with the key-value pair
    //     println(s"$key -> $value")
    //  }
  }

  //following methods are ised to read config files in scala 2.12
   def readConfigFile(filePath: String): Properties = {
          val properties = new Properties()
          val reader = Source.fromFile(filePath)
          properties.load(reader.bufferedReader())
          reader.close()
          properties
        }

  def greeting(): String = "Hello, world!"

  //following methods are used to read config files in scala 2.11
  def testConf(): Unit = {
    val resourceName = "config.txt"

    // Get the input stream for the resource
    val resourceStream = getClass.getResourceAsStream(s"/$resourceName")

    if (resourceStream != null) {
      // Read the contents of the resource as a string using Scala's Using
      Source.fromInputStream(resourceStream).getLines().foreach { line =>
        // Process each line as needed
        println(line)
      }
    } else {
      println(s"Resource '$resourceName' not found.")
    }
  }
  
}
